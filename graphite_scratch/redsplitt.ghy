; python ghosthon.py <../graphite_scratch/redsplitt.ghy >../graphite_scratch/redsplitt.ghc

; This strategy combines red ghost from original pacman
; and splitter mode when ghosts are too close

; General varibles [165-200]
alias selfindex [165]
alias vitality [166]
alias direction [167]
alias xx [168]
alias yy [169]
alias opposite [170]


; Variables for red mode [200-242]

alias up [220]
alias down [221]
alias left [210]
alias right [211]

alias hor [200]
alias ver [201]
alias hordir [203]
alias verdir [204]


; Variables for splitter mode [100-164]
alias deltax [100]
alias deltay [101]
alias cnt [102]
alias curdir [103]
; Variables introduced by cyberdervish [150-164]
alias pacmannear [150]

; Constants
alias ghostvision 1
alias false 0
alias true 1

; Get self info: position, vitality, direction

!myindex
mov selfindex, a
!ghostpos
mov xx, a
mov yy, b

!myindex
!ghoststats
mov vitality, a
mov direction, b
mov opposite, b
xor opposite, 2

; Check if pacman is near
!lambdaman
ifnot a > xx
    mov deltax, xx
    sub deltax, a
else
    mov deltax, a
    sub deltax, xx
ifnot b > yy
    mov deltay, yy
    sub deltay, b
else
    mov deltay, b
    sub deltay, yy
mov pacmannear, deltax
add pacmannear, deltay
if pacmannear > ghostvision
    mov pacmannear, false
else
    mov pacmannear, true

; Check if another ghost is here
; Iterate over max 20 ghosts
mov cnt, 0
whilenot cnt = 20
    ifnot cnt = selfindex
        mov a, cnt
        mov b, 0
        !ghostpos
        ifnot b = 0
            ifnot a > xx
                mov deltax, xx
                sub deltax, a
            else
                mov deltax, a
                sub deltax, xx
            ifnot b > yy
                mov deltay, yy
                sub deltay, b
            else
                mov deltay, b
                sub deltay, yy
            ifnot deltax > 1
                ifnot deltay > 1
                    add deltax, deltay
                    ifnot deltax > 1
                        jmp /splitter/
    inc cnt

; Original red ghost mode

!lambdaman

if xx < a
    mov right, a
    sub right, xx
    mov left, 0
else
    mov left, xx
    sub left, a
    mov right, 0

if yy < b
    mov down, b
    sub down, yy
    mov up, 0
else
    mov up, yy
    sub up, b
    mov down, 0


; flip if frightened
if vitality = 1
    mov d, left
    mov left, right
    mov right, d
    mov d, up
    mov up, down
    mov down, d


if left > right
    mov hordir, 3
    mov hor, left
else
    mov hordir, 1
    mov hor, right

if up > down
    mov verdir, 0
    mov ver, up
else
    mov verdir, 2
    mov ver, down

if hor > ver
    mov a, hordir
else
    mov a, verdir


; If algorithm suggests to turn around, pick some other direction instead.
if opposite = a
    add a, 1
    if a = 4
        mov a, 0

!report

; Switch to splitter mode
; Magic happens here
mov cnt, selfindex | splitter
add cnt, direction
mov curdir, 0
whilenot cnt = 0
    ifnot curdir = opposite
        mov a, curdir
    inc curdir
    if curdir = 4
        mov curdir, 0
    dec cnt

!report
